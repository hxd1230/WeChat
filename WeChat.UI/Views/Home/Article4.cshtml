
@{
    Layout = null;
}

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>微服务，为什么从前后端分离开始？</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <link href="~/css/style.css" rel="stylesheet" type="text/css" />

    <script type="text/javascript" src="~/js/cufon-yui.js"></script>
    <script type="text/javascript" src="~/js/arial.js"></script>
    <script type="text/javascript" src="~/js/cuf_run.js"></script>
    <script type="text/javascript" src="~/js/jquery-1.3.2.min.js"></script>
    <script type="text/javascript" src="~/js/radius.js"></script>
    <!-- CuFon ends -->
</head>
<body>
    <div class="main">

        <div class="header">
            <div class="header_resize">
                <div class="logo"><h1><a href="index.html">HeXiaoDong.top</a></h1></div>
                <div class="menu_nav">
                    <ul>
                        <li><a href="@Url.Action("Index")">首页</a></li>
                        <li><a href="@Url.Action("Blog",new { id=1})">最新博客</a></li>
                        <li><a href="@Url.Action("Contact")">联系我</a></li>
                    </ul>
                </div>
                <div class="clr"></div>
            </div>
        </div>

        <div class="content">
            <div class="content_resize">
                <div class="mainbar">
                    <div class="article">
                        <h2><span>微服务，为什么从前后端分离开始？</span></h2><div class="clr"></div>
                                                              <div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.8; word-spacing: 2px; letter-spacing: 2px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;">
                                                                  <p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">昨天下午 5 点 10 分左右，我解决掉了最后一个 bug，轻舒一口气，准备关机下班。可这个时候，老板朝我走来，脸上挂着神秘的微笑，我就知道他不怀好意。果不其然，他扔给了我一个新的需求，要我在 Java 中解析 JSON，并且要在半个小时候给出最佳的解决方案。</p>
                                                                  <figure style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><img src="http://www.itwanger.com/assets/images/2020/01/java-json-parse-01.png" alt="" title="" style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; display: block; box-shadow: rgb(170, 170, 170) 0px 0px 10px 0px; margin: 0px auto; max-width: 100%;" /><figcaption style="line-height: inherit; margin: 0px; padding: 0px; margin-top: 10px; text-align: center; color: rgb(153, 153, 153); font-size: 0.7em;"></figcaption></figure>
                                                                  <p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">无奈，提前下班的希望破灭了。不过，按时下班的希望还是有的。于是我撸起袖子开始了研究，结果出乎我的意料，竟然不到 10 分钟就找出了最佳方案。但我假装还没有搞出来，趁着下班前的这段时间把方案整理成了现在你们看到的这篇文章。</p>
                                                                  <h3 id="h01json" style="color: inherit; line-height: inherit; padding: 0px; margin: 1.6em 0px; font-weight: bold; font-size: 1.3em;"><span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; display: inline-block; font-weight: normal; color: rgb(239, 112, 96);">01、JSON 是什么</span></h3>
                                                                  <p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;"><strong style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; font-weight: bold; color: rgb(233, 105, 0);">JSON</strong>（JavaScript Object Notation）是一种轻量级的数据交换格式，易于阅读和编写，机器解析和生成起来更是轻而易举。JSON 采用了完全独立于编程语言的文本格式，但它的格式非常符合 C 语言家族的习惯（比如 C、C++、C#、Java、JavaScript、Python 等）。 这种特质使得 JSON 成为了最理想的数据交换格式。</p>
                                                                  <p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">JSON 建构于两种常见的数据结构：</p>
                                                                  <ul style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; list-style-type: disc;">
                                                                      <li style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; margin-bottom: 0.5em;"><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;">“键/值”对。</span></li>
                                                                      <li style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; margin-bottom: 0.5em;"><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;">数组。</span></li>
                                                                  </ul>
                                                                  <p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">这使得 JSON 在同样基于这些结构的编程语言之间的交换成为可能。在 Java 中，解析 JSON 的第三方类库有很多，比如说下面这些。</p>
                                                                  <figure style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><img src="http://www.itwanger.com/assets/images/2020/01/java-json-parse-02.png" alt="" title="" style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; display: block; box-shadow: rgb(170, 170, 170) 0px 0px 10px 0px; margin: 0px auto; max-width: 100%;" /><figcaption style="line-height: inherit; margin: 0px; padding: 0px; margin-top: 10px; text-align: center; color: rgb(153, 153, 153); font-size: 0.7em;"></figcaption></figure>
                                                                  <p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">很多，对不对？但日常开发中，最常用的只有四个：Gson、Jackson、org.json 和阿里巴巴的 fastjson。下面我们来简单地对比下。</p>
                                                                  <h3 id="h02gson" style="color: inherit; line-height: inherit; padding: 0px; margin: 1.6em 0px; font-weight: bold; font-size: 1.3em;"><span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; display: inline-block; font-weight: normal; color: rgb(239, 112, 96);">02、Gson</span></h3>
                                                                  <p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">Gson 是谷歌提供的一个开源库，可以将 Java 对象序列化为 JSON 字符串，同样可以将 JSON 字符串反序列化（解析）为匹配的 Java 对象。</p>
                                                                  <p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">使用 Gson 之前，需要先在项目中引入 Gson 的依赖。</p>
<pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs xml" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; color: rgb(51, 51, 51); background: rgb(248, 248, 248); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 0, 128); font-weight: normal; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag">&lt;</span><span class="hljs-name" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 0, 128); font-weight: normal; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag"><span class="hljs-name">dependency</span></span></span><span class="hljs-tag">&gt;</span></span><br />&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 0, 128); font-weight: normal; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag">&lt;</span><span class="hljs-name" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 0, 128); font-weight: normal; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag"><span class="hljs-name">groupId</span></span></span><span class="hljs-tag">&gt;</span></span>com.google.code.gson<span class="hljs-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 0, 128); font-weight: normal; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag">&lt;/</span><span class="hljs-name" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 0, 128); font-weight: normal; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag"><span class="hljs-name">groupId</span></span></span><span class="hljs-tag">&gt;</span></span><br />&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 0, 128); font-weight: normal; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag">&lt;</span><span class="hljs-name" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 0, 128); font-weight: normal; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag"><span class="hljs-name">artifactId</span></span></span><span class="hljs-tag">&gt;</span></span>gson<span class="hljs-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 0, 128); font-weight: normal; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag">&lt;/</span><span class="hljs-name" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 0, 128); font-weight: normal; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag"><span class="hljs-name">artifactId</span></span></span><span class="hljs-tag">&gt;</span></span><br />&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 0, 128); font-weight: normal; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag">&lt;</span><span class="hljs-name" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 0, 128); font-weight: normal; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag"><span class="hljs-name">version</span></span></span><span class="hljs-tag">&gt;</span></span>2.8.6<span class="hljs-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 0, 128); font-weight: normal; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag">&lt;/</span><span class="hljs-name" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 0, 128); font-weight: normal; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag"><span class="hljs-name">version</span></span></span><span class="hljs-tag">&gt;</span></span><br />&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 0, 128); font-weight: normal; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag">&lt;</span><span class="hljs-name" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 0, 128); font-weight: normal; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag"><span class="hljs-name">scope</span></span></span><span class="hljs-tag">&gt;</span></span>compile<span class="hljs-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 0, 128); font-weight: normal; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag">&lt;/</span><span class="hljs-name" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 0, 128); font-weight: normal; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag"><span class="hljs-name">scope</span></span></span><span class="hljs-tag">&gt;</span></span><br /><span class="hljs-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 0, 128); font-weight: normal; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag">&lt;/</span><span class="hljs-name" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 0, 128); font-weight: normal; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag"><span class="hljs-name">dependency</span></span></span><span class="hljs-tag">&gt;</span></span><br /></code></pre>
                                                                  <p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;"><strong style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; font-weight: bold; color: rgb(233, 105, 0);">1）简单示例</strong></p>
<pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="java language-java hljs" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; color: rgb(51, 51, 51); background: rgb(248, 248, 248); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;">Gson&nbsp;gson&nbsp;=&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword">new</span></span>&nbsp;Gson();<br />gson.toJson(<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-number">18</span></span>);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 153, 136); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-comment">//&nbsp;==&gt;&nbsp;18</span></span><br /><span class="hljs-comment">gson.toJson(</span><span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(221, 17, 68); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-comment">"沉默王二"</span></span><span class="hljs-comment">);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 153, 136); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-comment">//&nbsp;==&gt;&nbsp;"沉默王二"</span></span><br /></code></pre>
                                                                  <p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">上面这段代码通过 <code style="line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(248, 35, 117); font-size: 14px; background: rgb(248, 248, 248);">new</code> 关键字创建了一个 Gson 对象，然后调用其 <code style="line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(248, 35, 117); font-size: 14px; background: rgb(248, 248, 248);">toJson()</code> 方法将整形和字符串转成了 JSON 字符串。</p>
                                                                  <p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">同样，可以调用 <code style="line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(248, 35, 117); font-size: 14px; background: rgb(248, 248, 248);">fromJson()</code> 方法将简单的 JSON 字符串解析为整形和字符串。</p>
<pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="java language-java hljs" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; color: rgb(51, 51, 51); background: rgb(248, 248, 248); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword">int</span></span>&nbsp;one&nbsp;=&nbsp;gson.fromJson(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(221, 17, 68); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-string">"18"</span></span>,&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword">int</span></span>.class);<br />Integer&nbsp;one1&nbsp;=&nbsp;gson.fromJson(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(221, 17, 68); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-string">"18"</span></span>,&nbsp;Integer.class);<br />String&nbsp;str&nbsp;=&nbsp;gson.fromJson(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(221, 17, 68); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-string">"\"沉默王二\""</span></span>,&nbsp;String.class);<br /></code></pre>
                                                                  <p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;"><strong style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; font-weight: bold; color: rgb(233, 105, 0);">2）复杂点的示例</strong></p>
                                                                  <p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">Cmower 类有两个字段：整形 age 和 字符串 name。</p>
<pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="java language-java hljs" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; color: rgb(51, 51, 51); background: rgb(248, 248, 248); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-class" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-class"><span class="hljs-keyword">class</span></span></span><span class="hljs-class">&nbsp;</span><span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(68, 85, 136); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-class"><span class="hljs-title">Cmower</span></span></span><span class="hljs-class">&nbsp;</span></span>{<br />&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword">private</span></span>&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword">int</span></span>&nbsp;age&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-number">18</span></span>;<br />&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword">private</span></span>&nbsp;String&nbsp;name&nbsp;=&nbsp;<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(221, 17, 68); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-string">"沉默王二"</span></span>;<br />}<br /></code></pre>
                                                                  <p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">将其转成 JSON 字符串。</p>
<pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="java language-java hljs" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; color: rgb(51, 51, 51); background: rgb(248, 248, 248); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;">Gson&nbsp;gson&nbsp;=&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword">new</span></span>&nbsp;Gson();<br />String&nbsp;json&nbsp;=&nbsp;gson.toJson(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword">new</span></span>&nbsp;Cmower());<br />System.out.println(json);<br /></code></pre>
                                                                  <p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">输出结果为：</p>
<pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs json" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; color: rgb(51, 51, 51); background: rgb(248, 248, 248); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;">{<span class="hljs-attr" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-attr">"age"</span></span>:<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-number">18</span></span>,<span class="hljs-attr" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-attr">"name"</span></span>:<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(221, 17, 68); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-string">"沉默王二"</span></span>}<br /></code></pre>
                                                                  <p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">可以再通过 <code style="line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(248, 35, 117); font-size: 14px; background: rgb(248, 248, 248);">fromJson()</code> 方法将字符串 json 解析为 Java 对象。</p>
<pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="java language-java hljs" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; color: rgb(51, 51, 51); background: rgb(248, 248, 248); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;">gson.fromJson(json,&nbsp;Cmower.class);<br /></code></pre>
                                                                  <p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;"><strong style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; font-weight: bold; color: rgb(233, 105, 0);">3）数组示例</strong></p>
<pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="java language-java hljs" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; color: rgb(51, 51, 51); background: rgb(248, 248, 248); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;">Gson&nbsp;gson&nbsp;=&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword">new</span></span>&nbsp;Gson();<br /><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword">int</span></span>[]&nbsp;ints&nbsp;=&nbsp;{<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-number">1</span></span>,&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-number">2</span></span>,&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-number">3</span></span>,&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-number">4</span></span>,&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-number">5</span></span>};<br />String[]&nbsp;strings&nbsp;=&nbsp;{<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(221, 17, 68); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-string">"沉"</span></span>,&nbsp;<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(221, 17, 68); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-string">"默"</span></span>,&nbsp;<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(221, 17, 68); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-string">"王二"</span></span>};<br /><br /><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 153, 136); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-comment">//&nbsp;转成&nbsp;JSON&nbsp;字符串</span></span><br /><span class="hljs-comment">gson.toJson(ints);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 153, 136); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-comment">//&nbsp;==&gt;&nbsp;[1,2,3,4,5]</span></span><br /><span class="hljs-comment">gson.toJson(strings);&nbsp;&nbsp;</span><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 153, 136); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-comment">//&nbsp;==&gt;&nbsp;["沉",&nbsp;"默",&nbsp;"王二"]</span></span><br /><br /><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 153, 136); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-comment">//&nbsp;解析为数组</span></span><br /><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-comment">int</span></span><span class="hljs-comment">[]&nbsp;ints2&nbsp;=&nbsp;gson.fromJson(</span><span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(221, 17, 68); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-comment">"[1,2,3,4,5]"</span></span><span class="hljs-comment">,&nbsp;</span><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-comment">int</span></span><span class="hljs-comment">[].class);</span><br /><span class="hljs-comment">String[]&nbsp;strings2&nbsp;=&nbsp;gson.fromJson(</span><span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(221, 17, 68); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-comment">"[\"沉\",&nbsp;\"默\",&nbsp;\"王二\"]"</span></span><span class="hljs-comment">,&nbsp;String[].class);</span><br /></code></pre>
                                                                  <p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">数组的处理仍然非常简单，调用的方法也仍然是 <code style="line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(248, 35, 117); font-size: 14px; background: rgb(248, 248, 248);">toJson()</code> 和 <code style="line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(248, 35, 117); font-size: 14px; background: rgb(248, 248, 248);">fromJson()</code> 方法。</p>
                                                                  <p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;"><strong style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; font-weight: bold; color: rgb(233, 105, 0);">4）集合示例</strong></p>
<pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="java language-java hljs" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; color: rgb(51, 51, 51); background: rgb(248, 248, 248); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;">Gson&nbsp;gson&nbsp;=&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword">new</span></span>&nbsp;Gson();<br />List&lt;String&gt;&nbsp;list&nbsp;=&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword">new</span></span>&nbsp;ArrayList&lt;&gt;(Arrays.asList(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(221, 17, 68); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-string">"沉"</span></span>,&nbsp;<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(221, 17, 68); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-string">"默"</span></span>,&nbsp;<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(221, 17, 68); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-string">"王二"</span></span>));<br />String&nbsp;json&nbsp;=&nbsp;gson.toJson(list);&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 153, 136); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-comment">//&nbsp;==&gt;&nbsp;["沉","默","王二"]</span></span><br /></code></pre>
                                                                  <p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">把集合转成 JSON 字符串并没有什么特别之处，不过，把 JSON 字符串解析为集合就和之前的方法有些不同了。</p>
<pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="java language-java hljs" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; color: rgb(51, 51, 51); background: rgb(248, 248, 248); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;">Type&nbsp;collectionType&nbsp;=&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword">new</span></span>&nbsp;TypeToken&lt;ArrayList&lt;String&gt;&gt;(){}.getType();<br />List&lt;String&gt;&nbsp;list2&nbsp;=&nbsp;gson.fromJson(json,&nbsp;collectionType);<br /></code></pre>
                                                                  <p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">我们需要借助 <code style="line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(248, 35, 117); font-size: 14px; background: rgb(248, 248, 248);">com.google.gson.reflect.TypeToken</code> 和 <code style="line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(248, 35, 117); font-size: 14px; background: rgb(248, 248, 248);">java.lang.reflect.Type</code> 来获取集合的类型，再将其作为参数传递给 <code style="line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(248, 35, 117); font-size: 14px; background: rgb(248, 248, 248);">formJson()</code> 方法，才能将 JSON 字符串解析为集合。</p>
                                                                  <p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">Gson 虽然可以将任意的 Java 对象转成 JSON 字符串，但将字符串解析为指定的集合类型时就需要花点心思了，因为涉及到了泛型——TypeToken 是解决这个问题的银弹。</p>
                                                                  <p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">关于 Gson，我们就先说到这吧，以后有机会的时候再和大家细说。</p>
                                                                  <h3 id="h03jackson" style="color: inherit; line-height: inherit; padding: 0px; margin: 1.6em 0px; font-weight: bold; font-size: 1.3em;"><span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; display: inline-block; font-weight: normal; color: rgb(239, 112, 96);">03、Jackson</span></h3>
                                                                  <p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">Jackson 是基于 Stream 构建的一款用来序列化和反序列化 JSON 的 Java 开源库，社区非常活跃，其版本的更新速度也比较快。</p>
                                                                  <ul style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; list-style-type: disc;">
                                                                      <li style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; margin-bottom: 0.5em;"><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;">截止到目前，GitHub 上已经星标 5.2K 了；</span></li>
                                                                      <li style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; margin-bottom: 0.5em;"><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;">Spring MVC 的默认 JSON 解析器；</span></li>
                                                                      <li style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; margin-bottom: 0.5em;"><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;">与 Gson 相比，Jackson 在解析大的 JSON 文件时速度更快。</span></li>
                                                                      <li style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; margin-bottom: 0.5em;"><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;">与 fastjson 相比，Jackson 更稳定。</span></li>
                                                                  </ul>
                                                                  <p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">在使用 Jackson 之前，需要先添加 Jackson 的依赖。</p>
<pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="xml language-xml hljs" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; color: rgb(51, 51, 51); background: rgb(248, 248, 248); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 0, 128); font-weight: normal; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag">&lt;</span><span class="hljs-name" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 0, 128); font-weight: normal; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag"><span class="hljs-name">dependency</span></span></span><span class="hljs-tag">&gt;</span></span><br />&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 0, 128); font-weight: normal; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag">&lt;</span><span class="hljs-name" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 0, 128); font-weight: normal; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag"><span class="hljs-name">groupId</span></span></span><span class="hljs-tag">&gt;</span></span>com.fasterxml.jackson.core<span class="hljs-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 0, 128); font-weight: normal; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag">&lt;/</span><span class="hljs-name" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 0, 128); font-weight: normal; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag"><span class="hljs-name">groupId</span></span></span><span class="hljs-tag">&gt;</span></span><br />&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 0, 128); font-weight: normal; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag">&lt;</span><span class="hljs-name" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 0, 128); font-weight: normal; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag"><span class="hljs-name">artifactId</span></span></span><span class="hljs-tag">&gt;</span></span>jackson-databind<span class="hljs-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 0, 128); font-weight: normal; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag">&lt;/</span><span class="hljs-name" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 0, 128); font-weight: normal; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag"><span class="hljs-name">artifactId</span></span></span><span class="hljs-tag">&gt;</span></span><br />&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 0, 128); font-weight: normal; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag">&lt;</span><span class="hljs-name" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 0, 128); font-weight: normal; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag"><span class="hljs-name">version</span></span></span><span class="hljs-tag">&gt;</span></span>2.9.1<span class="hljs-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 0, 128); font-weight: normal; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag">&lt;/</span><span class="hljs-name" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 0, 128); font-weight: normal; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag"><span class="hljs-name">version</span></span></span><span class="hljs-tag">&gt;</span></span><br /><span class="hljs-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 0, 128); font-weight: normal; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag">&lt;/</span><span class="hljs-name" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 0, 128); font-weight: normal; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag"><span class="hljs-name">dependency</span></span></span><span class="hljs-tag">&gt;</span></span><br /></code></pre>
                                                                  <p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">Jackson 的核心模块由三部分组成。</p>
                                                                  <ul style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; list-style-type: disc;">
                                                                      <li style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; margin-bottom: 0.5em;"><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;">jackson-core，核心包，提供基于"流模式"解析的相关 API，它包括 JsonPaser 和 JsonGenerator。 </span></li>
                                                                      <li style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; margin-bottom: 0.5em;"><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;">jackson-annotations，注解包，提供标准注解功能。</span></li>
                                                                      <li style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; margin-bottom: 0.5em;"><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;">jackson-databind ，数据绑定包， 提供基于"对象绑定" 解析的相关 API （ ObjectMapper ） 和"树模型" 解析的相关 API （JsonNode）；基于"对象绑定" 解析的 API 和"树模型"解析的 API 依赖基于"流模式"解析的 API。</span></li>
                                                                  </ul>
                                                                  <p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">当添加 jackson-databind 之后， jackson-core 和 jackson-annotations 也随之添加到 Java 项目工程中。</p>
                                                                  <p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">这里顺带推荐一个 IDEA 插件：JsonFormat，可以将 JSON 字符串生成一个 JavaBean。怎么使用呢？可以新建一个类，然后调出  Generate 菜单。</p>
                                                                  <figure style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><img src="http://www.itwanger.com/assets/images/2020/01/java-json-parse-03.png" alt="" title="" style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; display: block; box-shadow: rgb(170, 170, 170) 0px 0px 10px 0px; margin: 0px auto; max-width: 100%;" /><figcaption style="line-height: inherit; margin: 0px; padding: 0px; margin-top: 10px; text-align: center; color: rgb(153, 153, 153); font-size: 0.7em;"></figcaption></figure>
                                                                  <p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">选择 JsonFormat，输入 JSON 字符串。</p>
<pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs json" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; color: rgb(51, 51, 51); background: rgb(248, 248, 248); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;">{<br />&nbsp;&nbsp;<span class="hljs-attr" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-attr">"age"</span></span>&nbsp;:&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-number">18</span></span>,<br />&nbsp;&nbsp;<span class="hljs-attr" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-attr">"name"</span></span>&nbsp;:&nbsp;<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(221, 17, 68); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-string">"沉默王二"</span></span><br />}<br /></code></pre>
                                                                  <p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">确认后生成 JavaBean，生成的内容如下所示。</p>
<pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="java language-java hljs" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; color: rgb(51, 51, 51); background: rgb(248, 248, 248); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword">public</span></span>&nbsp;<span class="hljs-class" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-class"><span class="hljs-keyword">class</span></span></span><span class="hljs-class">&nbsp;</span><span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(68, 85, 136); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-class"><span class="hljs-title">Cmower</span></span></span><span class="hljs-class">&nbsp;</span></span>{<br />&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword">private</span></span>&nbsp;Integer&nbsp;age;<br />&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword">private</span></span>&nbsp;String&nbsp;name;<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-function" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-function"><span class="hljs-keyword">public</span></span></span><span class="hljs-function">&nbsp;</span><span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 0, 0); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-function"><span class="hljs-title">Cmower</span></span></span><span class="hljs-params" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-function"><span class="hljs-params">()</span></span></span><span class="hljs-function">&nbsp;</span></span>{<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-function" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-function"><span class="hljs-keyword">public</span></span></span><span class="hljs-function">&nbsp;</span><span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 0, 0); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-function"><span class="hljs-title">Cmower</span></span></span><span class="hljs-params" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-function"><span class="hljs-params">(Integer&nbsp;age,&nbsp;String&nbsp;name)</span></span></span><span class="hljs-function">&nbsp;</span></span>{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword">this</span></span>.age&nbsp;=&nbsp;age;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword">this</span></span>.name&nbsp;=&nbsp;name;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-function" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-function"><span class="hljs-keyword">public</span></span></span><span class="hljs-function">&nbsp;Integer&nbsp;</span><span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 0, 0); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-function"><span class="hljs-title">getAge</span></span></span><span class="hljs-params" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-function"><span class="hljs-params">()</span></span></span><span class="hljs-function">&nbsp;</span></span>{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword">return</span></span>&nbsp;age;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-function" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-function"><span class="hljs-keyword">public</span></span></span><span class="hljs-function">&nbsp;</span><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-function"><span class="hljs-keyword">void</span></span></span><span class="hljs-function">&nbsp;</span><span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 0, 0); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-function"><span class="hljs-title">setAge</span></span></span><span class="hljs-params" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-function"><span class="hljs-params">(Integer&nbsp;age)</span></span></span><span class="hljs-function">&nbsp;</span></span>{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword">this</span></span>.age&nbsp;=&nbsp;age;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-function" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-function"><span class="hljs-keyword">public</span></span></span><span class="hljs-function">&nbsp;String&nbsp;</span><span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 0, 0); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-function"><span class="hljs-title">getName</span></span></span><span class="hljs-params" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-function"><span class="hljs-params">()</span></span></span><span class="hljs-function">&nbsp;</span></span>{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword">return</span></span>&nbsp;name;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-function" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-function"><span class="hljs-keyword">public</span></span></span><span class="hljs-function">&nbsp;</span><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-function"><span class="hljs-keyword">void</span></span></span><span class="hljs-function">&nbsp;</span><span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 0, 0); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-function"><span class="hljs-title">setName</span></span></span><span class="hljs-params" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-function"><span class="hljs-params">(String&nbsp;name)</span></span></span><span class="hljs-function">&nbsp;</span></span>{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword">this</span></span>.name&nbsp;=&nbsp;name;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />}<br /></code></pre>
                                                                  <p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">那怎么使用 Jackson 呢？上文已经提到，ObjectMapper 是 Jackson 最常用的 API，我们来看一个简单的示例。</p>
<pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="java language-java hljs" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; color: rgb(51, 51, 51); background: rgb(248, 248, 248); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;">Cmower&nbsp;wanger&nbsp;=&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword">new</span></span>&nbsp;Cmower(<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-number">18</span></span>,<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(221, 17, 68); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-string">"沉默王二"</span></span>);<br />System.out.println(wanger);<br /><br />ObjectMapper&nbsp;mapper&nbsp;=&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword">new</span></span>&nbsp;ObjectMapper();<br />String&nbsp;jsonString&nbsp;=&nbsp;mapper.writerWithDefaultPrettyPrinter().writeValueAsString(wanger);<br /><br />System.out.println(jsonString);<br /><br />Cmower&nbsp;deserialize&nbsp;=&nbsp;mapper.readValue(jsonString,Cmower.class);<br />System.out.println(deserialize);<br /></code></pre>
                                                                  <p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">ObjectMapper 通过 <code style="line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(248, 35, 117); font-size: 14px; background: rgb(248, 248, 248);">writeValue()</code> 的系列方法可以将 Java 对象序列化为 JSON，并将 JSON 存储成不同的格式。</p>
                                                                  <ul style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; list-style-type: disc;">
                                                                      <li style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; margin-bottom: 0.5em;"><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;">String（writeValueAsString）</span></li>
                                                                      <li style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; margin-bottom: 0.5em;"><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;">Byte Array（writeValueAsBytes）</span></li>
                                                                  </ul>
                                                                  <p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">ObjectMapper 通过 <code style="line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(248, 35, 117); font-size: 14px; background: rgb(248, 248, 248);">readValue()</code> 系列方法可以从不同的数据源（String、Bytes）将 JSON 反序列化（解析）为 Java 对象。</p>
                                                                  <p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">程序输出结果为：</p>
<pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs css" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; color: rgb(51, 51, 51); background: rgb(248, 248, 248); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-selector-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-selector-tag">com</span></span><span class="hljs-selector-class" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-selector-class">.cmower</span></span><span class="hljs-selector-class" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-selector-class">.java_demo</span></span><span class="hljs-selector-class" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-selector-class">.jackson</span></span><span class="hljs-selector-class" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-selector-class">.Cmower</span></span><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword">214c265e</span></span><br />{<br />&nbsp;&nbsp;"<span class="hljs-selector-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-selector-tag">age</span></span>"&nbsp;:&nbsp;18,<br />&nbsp;&nbsp;"<span class="hljs-selector-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-selector-tag">name</span></span>"&nbsp;:&nbsp;"沉默王二"<br />}<br /><span class="hljs-selector-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-selector-tag">com</span></span><span class="hljs-selector-class" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-selector-class">.cmower</span></span><span class="hljs-selector-class" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-selector-class">.java_demo</span></span><span class="hljs-selector-class" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-selector-class">.jackson</span></span><span class="hljs-selector-class" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-selector-class">.Cmower</span></span><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword">612fc6eb</span></span><br /></code></pre>
                                                                  <p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">在调用 <code style="line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(248, 35, 117); font-size: 14px; background: rgb(248, 248, 248);">writeValue()</code> 或者 <code style="line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(248, 35, 117); font-size: 14px; background: rgb(248, 248, 248);">readValue()</code> 方法之前，往往需要对 JSON 和 JavaBean 之间进行一些定制化配置。</p>
                                                                  <p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">1）在反序列化时忽略在 JSON 中存在但 JavaBean 不存在的字段</p>
<pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="java language-java hljs" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; color: rgb(51, 51, 51); background: rgb(248, 248, 248); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;">mapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES,&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword">false</span></span>);<br /></code></pre>
                                                                  <p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">2）在序列化时忽略值为 null 的字段</p>
<pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="java language-java hljs" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; color: rgb(51, 51, 51); background: rgb(248, 248, 248); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;">apper.setSerializationInclusion(Include.NON_NULL);&nbsp;<br /></code></pre>
                                                                  <p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">有些时候，这些定制化的配置对 JSON 和 JavaBean 之间的转化起着重要的作用。如果需要更多配置信息，查看 DeserializationFeature、SerializationFeature 和 Include 类的 Javadoc 即可。</p>
                                                                  <p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">关于 Jackson，我们就说到这吧，以后有机会的时候再和大家细说。</p>
                                                                  <h3 id="h04orgjson" style="color: inherit; line-height: inherit; padding: 0px; margin: 1.6em 0px; font-weight: bold; font-size: 1.3em;"><span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; display: inline-block; font-weight: normal; color: rgb(239, 112, 96);">04、org.json</span></h3>
                                                                  <p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">org.json 是 JSON 官方提供的一个开源库，不过使用起来就略显繁琐了。</p>
                                                                  <p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">使用 org.json 之前，需要先在项目中引入 org.json 的依赖。</p>
<pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs xml" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; color: rgb(51, 51, 51); background: rgb(248, 248, 248); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 0, 128); font-weight: normal; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag">&lt;</span><span class="hljs-name" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 0, 128); font-weight: normal; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag"><span class="hljs-name">dependency</span></span></span><span class="hljs-tag">&gt;</span></span><br />&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 0, 128); font-weight: normal; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag">&lt;</span><span class="hljs-name" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 0, 128); font-weight: normal; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag"><span class="hljs-name">groupId</span></span></span><span class="hljs-tag">&gt;</span></span>org.json<span class="hljs-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 0, 128); font-weight: normal; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag">&lt;/</span><span class="hljs-name" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 0, 128); font-weight: normal; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag"><span class="hljs-name">groupId</span></span></span><span class="hljs-tag">&gt;</span></span><br />&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 0, 128); font-weight: normal; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag">&lt;</span><span class="hljs-name" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 0, 128); font-weight: normal; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag"><span class="hljs-name">artifactId</span></span></span><span class="hljs-tag">&gt;</span></span>json<span class="hljs-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 0, 128); font-weight: normal; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag">&lt;/</span><span class="hljs-name" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 0, 128); font-weight: normal; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag"><span class="hljs-name">artifactId</span></span></span><span class="hljs-tag">&gt;</span></span><br />&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 0, 128); font-weight: normal; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag">&lt;</span><span class="hljs-name" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 0, 128); font-weight: normal; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag"><span class="hljs-name">version</span></span></span><span class="hljs-tag">&gt;</span></span>20190722<span class="hljs-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 0, 128); font-weight: normal; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag">&lt;/</span><span class="hljs-name" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 0, 128); font-weight: normal; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag"><span class="hljs-name">version</span></span></span><span class="hljs-tag">&gt;</span></span><br /><span class="hljs-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 0, 128); font-weight: normal; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag">&lt;/</span><span class="hljs-name" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 0, 128); font-weight: normal; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag"><span class="hljs-name">dependency</span></span></span><span class="hljs-tag">&gt;</span></span><br /></code></pre>
                                                                  <p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;"><code style="line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(248, 35, 117); font-size: 14px; background: rgb(248, 248, 248);">org.json.JSONObject</code> 类可以通过 new 关键字将 JSON 字符串解析为 Java 对象，然后 get 的系列方法获取对应的键值，代码示例如下所示。</p>
<pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="java language-java hljs" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; color: rgb(51, 51, 51); background: rgb(248, 248, 248); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;">String&nbsp;str&nbsp;=&nbsp;<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(221, 17, 68); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-string">"{&nbsp;\"name\":&nbsp;\"沉默王二\",&nbsp;\"age\":&nbsp;18&nbsp;}"</span></span>;<br />JSONObject&nbsp;obj&nbsp;=&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword">new</span></span>&nbsp;JSONObject(str);<br />String&nbsp;name&nbsp;=&nbsp;obj.getString(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(221, 17, 68); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-string">"name"</span></span>);<br /><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword">int</span></span>&nbsp;age&nbsp;=&nbsp;obj.getInt(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(221, 17, 68); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-string">"age"</span></span>);<br /></code></pre>
                                                                  <p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">调用 <code style="line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(248, 35, 117); font-size: 14px; background: rgb(248, 248, 248);">org.json.JSONObject</code> 类的 <code style="line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(248, 35, 117); font-size: 14px; background: rgb(248, 248, 248);">getJSONArray()</code> 方法可以返回一个表示数组的<code style="line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(248, 35, 117); font-size: 14px; background: rgb(248, 248, 248);">org.json.JSONArray</code> 对象，再通过循环的方式可以获取数组中的元素，代码示例如下所示。</p>
<pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="java language-java hljs" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; color: rgb(51, 51, 51); background: rgb(248, 248, 248); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;">String&nbsp;str&nbsp;=&nbsp;<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(221, 17, 68); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-string">"{&nbsp;\"number\":&nbsp;[3,&nbsp;4,&nbsp;5,&nbsp;6]&nbsp;}"</span></span>;<br />JSONObject&nbsp;obj&nbsp;=&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword">new</span></span>&nbsp;JSONObject(str);<br />JSONArray&nbsp;arr&nbsp;=&nbsp;obj.getJSONArray(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(221, 17, 68); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-string">"number"</span></span>);<br /><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword">for</span></span>&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword">int</span></span>&nbsp;i&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-number">0</span></span>;&nbsp;i&nbsp;&lt;&nbsp;arr.length();&nbsp;i++)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(arr.getInt(i));<br />}<br /></code></pre>
                                                                  <p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">如果想获取 JSON 字符串，可以使用 <code style="line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(248, 35, 117); font-size: 14px; background: rgb(248, 248, 248);">put()</code> 方法将键值对放入 <code style="line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(248, 35, 117); font-size: 14px; background: rgb(248, 248, 248);">org.json.JSONObject</code> 对象中，再调用 <code style="line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(248, 35, 117); font-size: 14px; background: rgb(248, 248, 248);">toString()</code> 方法即可，代码示例如下所示。</p>
<pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="java language-java hljs" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; color: rgb(51, 51, 51); background: rgb(248, 248, 248); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;">JSONObject&nbsp;obj&nbsp;=&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword">new</span></span>&nbsp;JSONObject();<br />obj.put(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(221, 17, 68); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-string">"name"</span></span>,<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(221, 17, 68); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-string">"沉默王二"</span></span>);<br />obj.put(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(221, 17, 68); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-string">"age"</span></span>,<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-number">18</span></span>);<br />System.out.println(obj.toString());&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 153, 136); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-comment">//&nbsp;{"name":"沉默王二","age":18}</span></span><br /></code></pre>
                                                                  <p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">相比较于 Gson 和 Jackson 来说，org.json 就要逊色多了，不仅不够灵活，API 也不够丰富。</p>
                                                                  <h3 id="h05fastjson" style="color: inherit; line-height: inherit; padding: 0px; margin: 1.6em 0px; font-weight: bold; font-size: 1.3em;"><span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; display: inline-block; font-weight: normal; color: rgb(239, 112, 96);">05、fastjson</span></h3>
                                                                  <p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">fastjson 是阿里巴巴开源的 JSON 解析库，它可以解析 JSON 格式的字符串，也支持将 Java Bean 序列化为 JSON 字符串。</p>
                                                                  <p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">fastjson 相对于其他 JSON 库的特点就是快，另外 API 使用起来也非常简单，更是在 2012 年被开源中国评选为最受欢迎的国产开源软件之一。</p>
                                                                  <p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">PS：尽管 fastjson 值得信赖，但也闹过不少腥风血雨，这里就不提了。</p>
                                                                  <p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">在使用 fastjson 之前，需要先添加 fastjson 的依赖。</p>
<pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs xml" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; color: rgb(51, 51, 51); background: rgb(248, 248, 248); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 0, 128); font-weight: normal; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag">&lt;</span><span class="hljs-name" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 0, 128); font-weight: normal; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag"><span class="hljs-name">dependency</span></span></span><span class="hljs-tag">&gt;</span></span><br />&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 0, 128); font-weight: normal; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag">&lt;</span><span class="hljs-name" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 0, 128); font-weight: normal; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag"><span class="hljs-name">groupId</span></span></span><span class="hljs-tag">&gt;</span></span>com.alibaba<span class="hljs-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 0, 128); font-weight: normal; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag">&lt;/</span><span class="hljs-name" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 0, 128); font-weight: normal; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag"><span class="hljs-name">groupId</span></span></span><span class="hljs-tag">&gt;</span></span><br />&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 0, 128); font-weight: normal; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag">&lt;</span><span class="hljs-name" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 0, 128); font-weight: normal; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag"><span class="hljs-name">artifactId</span></span></span><span class="hljs-tag">&gt;</span></span>fastjson<span class="hljs-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 0, 128); font-weight: normal; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag">&lt;/</span><span class="hljs-name" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 0, 128); font-weight: normal; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag"><span class="hljs-name">artifactId</span></span></span><span class="hljs-tag">&gt;</span></span><br />&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 0, 128); font-weight: normal; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag">&lt;</span><span class="hljs-name" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 0, 128); font-weight: normal; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag"><span class="hljs-name">version</span></span></span><span class="hljs-tag">&gt;</span></span>1.2.61<span class="hljs-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 0, 128); font-weight: normal; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag">&lt;/</span><span class="hljs-name" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 0, 128); font-weight: normal; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag"><span class="hljs-name">version</span></span></span><span class="hljs-tag">&gt;</span></span><br /><span class="hljs-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 0, 128); font-weight: normal; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag">&lt;/</span><span class="hljs-name" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 0, 128); font-weight: normal; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag"><span class="hljs-name">dependency</span></span></span><span class="hljs-tag">&gt;</span></span><br /></code></pre>
                                                                  <p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">那怎么使用 fastjson 呢？我们来创建一个 Java Bean，有三个字段：年龄 age，名字 name，列表 books。</p>
<pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="java language-java hljs" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; color: rgb(51, 51, 51); background: rgb(248, 248, 248); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-class" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-class"><span class="hljs-keyword">class</span></span></span><span class="hljs-class">&nbsp;</span><span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(68, 85, 136); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-class"><span class="hljs-title">Cmower1</span></span></span><span class="hljs-class">&nbsp;</span></span>{<br />&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword">private</span></span>&nbsp;Integer&nbsp;age;<br />&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword">private</span></span>&nbsp;String&nbsp;name;<br />&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword">private</span></span>&nbsp;List&lt;String&gt;&nbsp;books&nbsp;=&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword">new</span></span>&nbsp;ArrayList&lt;&gt;();<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-function" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-function"><span class="hljs-keyword">public</span></span></span><span class="hljs-function">&nbsp;</span><span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 0, 0); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-function"><span class="hljs-title">Cmower1</span></span></span><span class="hljs-params" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-function"><span class="hljs-params">(Integer&nbsp;age,&nbsp;String&nbsp;name)</span></span></span><span class="hljs-function">&nbsp;</span></span>{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword">this</span></span>.age&nbsp;=&nbsp;age;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword">this</span></span>.name&nbsp;=&nbsp;name;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 153, 136); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-comment">//&nbsp;getter/setter</span></span><br /><br /><span class="hljs-comment">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="hljs-function" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-comment">public</span></span><span class="hljs-comment">&nbsp;</span><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-comment">void</span></span><span class="hljs-comment">&nbsp;</span><span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 0, 0); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-comment">putBook</span></span><span class="hljs-params" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-comment">(String&nbsp;bookname)</span></span><span class="hljs-comment">&nbsp;</span></span><span class="hljs-comment">{</span><br /><span class="hljs-comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-comment">this</span></span><span class="hljs-comment">.books.add(bookname);</span><br /><span class="hljs-comment">&nbsp;&nbsp;&nbsp;&nbsp;}</span><br /><span class="hljs-comment">}</span><br /></code></pre>
                                                                  <p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">然后我们使用 <code style="line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(248, 35, 117); font-size: 14px; background: rgb(248, 248, 248);">JSON.toJSONString()</code> 将 Java 对象序列化为 JSON 字符串，代码示例如下：</p>
<pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="java language-java hljs" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; color: rgb(51, 51, 51); background: rgb(248, 248, 248); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;">Cmower1&nbsp;cmower&nbsp;=&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword">new</span></span>&nbsp;Cmower1(<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-number">18</span></span>,<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(221, 17, 68); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-string">"沉默王二"</span></span>);<br />cmower.putBook(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(221, 17, 68); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-string">"《Web全栈开发进阶之路》"</span></span>);<br />String&nbsp;jsonString&nbsp;=&nbsp;JSON.toJSONString(cmower);<br />System.out.println(jsonString);<br /></code></pre>
                                                                  <p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">程序输出：</p>
<pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs json" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; color: rgb(51, 51, 51); background: rgb(248, 248, 248); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;">{<span class="hljs-attr" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-attr">"age"</span></span>:<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-number">18</span></span>,<span class="hljs-attr" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-attr">"books"</span></span>:[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(221, 17, 68); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-string">"《Web全栈开发进阶之路》"</span></span>],<span class="hljs-attr" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-attr">"name"</span></span>:<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(221, 17, 68); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-string">"沉默王二"</span></span>}<br /></code></pre>
                                                                  <p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">那如何解析 JSON 字符串呢？使用 <code style="line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(248, 35, 117); font-size: 14px; background: rgb(248, 248, 248);">JSON.parseObject()</code> 方法，代码示例如下所示。</p>
<pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="java language-java hljs" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; color: rgb(51, 51, 51); background: rgb(248, 248, 248); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;">JSON.parseObject(jsonString,&nbsp;Cmower1.class)<br /></code></pre>
                                                                  <h3 id="h06" style="color: inherit; line-height: inherit; padding: 0px; margin: 1.6em 0px; font-weight: bold; font-size: 1.3em;"><span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; display: inline-block; font-weight: normal; color: rgb(239, 112, 96);">06、总结</span></h3>
                                                                  <p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">就我个人而言，我是比较推崇 Gson 的，毕竟是谷歌出品的，品质值得信赖，关键是用起来也确实比较得劲。</p>
                                                                  <p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">Jackson 呢，在解析大的 JSON 文件时速度更快，也比 fastjson 稳定。</p>
                                                                  <p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">fastjson 呢，作为我们国产开源软件中的骄傲，嗯，值得尊敬。</p>
                                                                  <p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">令我意外的是，org.json 在 StackOverflow 上一个 160 万浏览量的提问中，牢牢地占据头名答案。更令我想不到的是，老板竟然也选择了 org.json，说它比较原生，JSON 官方的亲儿子。</p>
                                                                  <p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">我。。。。。。</p>
                                                                  <figure style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><img src="http://www.itwanger.com/assets/images/2020/01/java-json-parse-04.png" alt="" title="" style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; display: block; box-shadow: rgb(170, 170, 170) 0px 0px 10px 0px; margin: 0px auto; max-width: 100%;" /><figcaption style="line-height: inherit; margin: 0px; padding: 0px; margin-top: 10px; text-align: center; color: rgb(153, 153, 153); font-size: 0.7em;"></figcaption></figure>
                                                                  <h3 id="h07" style="color: inherit; line-height: inherit; padding: 0px; margin: 1.6em 0px; font-weight: bold; font-size: 1.3em;"><span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; display: inline-block; font-weight: normal; color: rgb(239, 112, 96);">07、鸣谢</span></h3>
                                                                  <p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">好了，各位读者朋友们，以上就是本文的全部内容了。能看到这里的都是最优秀的程序员，升职加薪就是你了👍。如果觉得不过瘾，还想看到更多，我再推荐一篇给大家。</p>
                                                                  <p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;"><a href="https://mp.weixin.qq.com/s/67ENoPJx4qX29JU9O5NSpQ" style="line-height: inherit; margin: 0px; padding: 0px; text-decoration: none; color: rgb(30, 107, 184); overflow-wrap: break-word; font-size: 14px;">还有一周就解放了，无心撸码，着急回家</a></p>
                                                                  <p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;"><strong style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; font-weight: bold; color: rgb(233, 105, 0);">原创不易，如果觉得有点用的话，请不要吝啬你手中点赞的权力</strong>；如果想要第一时间看到二哥更新的文章，请扫描下方的二维码，关注沉默王二公众号。我们下篇文章见！</p>
                                                                  <figure style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><img src="http://www.itwanger.com/assets/images/cmower_3.png" alt="" title="" style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; display: block; box-shadow: rgb(170, 170, 170) 0px 0px 10px 0px; margin: 0px auto; max-width: 100%;" /><figcaption style="line-height: inherit; margin: 0px; padding: 0px; margin-top: 10px; text-align: center; color: rgb(153, 153, 153); font-size: 0.7em;"></figcaption></figure>
                                                              </div>
                    </div>
                </div>
                <div class="clr"></div>
            </div>
        </div>
        <div class="footer">
            <div class="footer_resize">
                <p class="lf">&copy; Copyright <a href="#">晓冬科技</a>. Collect from: <a href="http://www.hexiaodong.top/" title="" target="_blank">www.hexiaodong.top</a></p>
                <ul class="fmenu">
                    <li><a href="@Url.Action("Index")">首页</a></li>
                    <li><a href="@Url.Action("Blog")">博客</a></li>
                    <li><a href="@Url.Action("Contact")">联系我</a></li>
                </ul>
                <div class="clr"></div>
            </div>
        </div>
    </div>
</body>
</html>
